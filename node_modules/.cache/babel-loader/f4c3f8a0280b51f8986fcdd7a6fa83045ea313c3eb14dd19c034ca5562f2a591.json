{"ast":null,"code":"// const defScaleObject = {\n//   \"Diatonic\": {\n//     \"lydian\":     [0,2,4,6,7,9,11], \n//     \"ionian\":     [0,2,4,5,7,9,11], \n//     \"mixolydian\": [0,2,4,5,7,9,10], \n//     \"dorian\":     [0,2,3,5,7,9,10], \n//     \"aeolian\":    [0,2,3,5,7,8,10], \n//     \"phrygian\":   [0,1,3,5,7,8,10], \n//     \"locrian\":    [0,1,3,5,6,8,10],\n//   },\n// }\nexport class ModeList {\n  constructor(modeObj = {}, transpose = 0) {\n    this.modeObj = void 0;\n    this.transpose = void 0;\n    this.modeObj = {};\n    this.transpose = transpose;\n    Object.entries(modeObj).forEach(([name, recipe]) => this.addMode(name, recipe));\n  }\n  addMode(modeName, modeRecipe) {\n    this.modeObj[modeName] = new Mode(modeName, modeRecipe, this.transpose);\n  }\n\n  // setObject(modeObj: {[key: string]: Array<number>}, transpose: number) { \n  //   this.modeObj = modeObj;\n  //   this.transpose = transpose;\n  // }\n}\n\nclass Mode {\n  constructor(modeName, modeRecipe, transpose) {\n    this.modeName = void 0;\n    this.modeArray = void 0;\n    this.modeName = modeName;\n    this.modeArray = [];\n    console.log(modeName, modeRecipe, transpose);\n  }\n  addChord(chord) {\n    this.modeArray.push(chord);\n  }\n}\nclass Chord {\n  constructor() {\n    this.id = void 0;\n    this.char = void 0;\n    this.numeral = void 0;\n    this.type = void 0;\n    this.id = \"\";\n    this.char = \"\";\n    this.numeral = \"\";\n    this.char = \"\";\n    console.log(modeName, modeRecipe, transpose);\n  }\n}","map":{"version":3,"names":["ModeList","constructor","modeObj","transpose","Object","entries","forEach","name","recipe","addMode","modeName","modeRecipe","Mode","modeArray","console","log","addChord","chord","push","Chord","id","char","numeral","type"],"sources":["C:/Users/Levi/Desktop/portfolio/src/Chart/pitchSpellerOOP.ts"],"sourcesContent":["import { v4 as uuidv4 } from 'uuid';\r\nimport { chordIntervals } from './chordIntervals';\r\n\r\n// const defScaleObject = {\r\n//   \"Diatonic\": {\r\n//     \"lydian\":     [0,2,4,6,7,9,11], \r\n//     \"ionian\":     [0,2,4,5,7,9,11], \r\n//     \"mixolydian\": [0,2,4,5,7,9,10], \r\n//     \"dorian\":     [0,2,3,5,7,9,10], \r\n//     \"aeolian\":    [0,2,3,5,7,8,10], \r\n//     \"phrygian\":   [0,1,3,5,7,8,10], \r\n//     \"locrian\":    [0,1,3,5,6,8,10],\r\n//   },\r\n// }\r\n\r\nexport class ModeList {\r\n  modeObj: any\r\n  transpose: number;\r\n\r\n  constructor(modeObj: {[key: string]: Array<number>} = {}, transpose: number = 0) {\r\n    this.modeObj = {};\r\n    this.transpose = transpose;\r\n    Object.entries(modeObj).forEach(([name, recipe]) => this.addMode(name, recipe));\r\n  }\r\n\r\n  addMode(modeName: string, modeRecipe: Array<number>) {\r\n    this.modeObj[modeName] = new Mode(modeName, modeRecipe, this.transpose);\r\n  }\r\n\r\n  // setObject(modeObj: {[key: string]: Array<number>}, transpose: number) { \r\n  //   this.modeObj = modeObj;\r\n  //   this.transpose = transpose;\r\n  // }\r\n}\r\n\r\nclass Mode {\r\n  modeName: string;\r\n  modeArray: Array<Object>;\r\n\r\n  constructor(modeName: string, modeRecipe: Array<number>, transpose: number) {\r\n    this.modeName = modeName;\r\n    this.modeArray = [];\r\n\r\n    console.log(modeName, modeRecipe, transpose);\r\n  }\r\n\r\n  addChord(chord: Object) { this.modeArray.push(chord) }\r\n}\r\n\r\nclass Chord {\r\n  id: string;\r\n  char: string;\r\n  numeral: string;\r\n  type: {\r\n    full: string,\r\n    short: string,\r\n    symbol: string,\r\n  };\r\n\r\n  constructor() {\r\n    this.id = \"\";\r\n    this.char = \"\";\r\n    this.numeral = \"\";\r\n    this.char = \"\";\r\n\r\n    console.log(modeName, modeRecipe, transpose);\r\n  }\r\n\r\n}\r\n"],"mappings":"AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,MAAMA,QAAQ,CAAC;EAIpBC,WAAWA,CAACC,OAAuC,GAAG,CAAC,CAAC,EAAEC,SAAiB,GAAG,CAAC,EAAE;IAAA,KAHjFD,OAAO;IAAA,KACPC,SAAS;IAGP,IAAI,CAACD,OAAO,GAAG,CAAC,CAAC;IACjB,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1BC,MAAM,CAACC,OAAO,CAACH,OAAO,CAAC,CAACI,OAAO,CAAC,CAAC,CAACC,IAAI,EAAEC,MAAM,CAAC,KAAK,IAAI,CAACC,OAAO,CAACF,IAAI,EAAEC,MAAM,CAAC,CAAC;EACjF;EAEAC,OAAOA,CAACC,QAAgB,EAAEC,UAAyB,EAAE;IACnD,IAAI,CAACT,OAAO,CAACQ,QAAQ,CAAC,GAAG,IAAIE,IAAI,CAACF,QAAQ,EAAEC,UAAU,EAAE,IAAI,CAACR,SAAS,CAAC;EACzE;;EAEA;EACA;EACA;EACA;AACF;;AAEA,MAAMS,IAAI,CAAC;EAITX,WAAWA,CAACS,QAAgB,EAAEC,UAAyB,EAAER,SAAiB,EAAE;IAAA,KAH5EO,QAAQ;IAAA,KACRG,SAAS;IAGP,IAAI,CAACH,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACG,SAAS,GAAG,EAAE;IAEnBC,OAAO,CAACC,GAAG,CAACL,QAAQ,EAAEC,UAAU,EAAER,SAAS,CAAC;EAC9C;EAEAa,QAAQA,CAACC,KAAa,EAAE;IAAE,IAAI,CAACJ,SAAS,CAACK,IAAI,CAACD,KAAK,CAAC;EAAC;AACvD;AAEA,MAAME,KAAK,CAAC;EAUVlB,WAAWA,CAAA,EAAG;IAAA,KATdmB,EAAE;IAAA,KACFC,IAAI;IAAA,KACJC,OAAO;IAAA,KACPC,IAAI;IAOF,IAAI,CAACH,EAAE,GAAG,EAAE;IACZ,IAAI,CAACC,IAAI,GAAG,EAAE;IACd,IAAI,CAACC,OAAO,GAAG,EAAE;IACjB,IAAI,CAACD,IAAI,GAAG,EAAE;IAEdP,OAAO,CAACC,GAAG,CAACL,QAAQ,EAAEC,UAAU,EAAER,SAAS,CAAC;EAC9C;AAEF"},"metadata":{},"sourceType":"module","externalDependencies":[]}