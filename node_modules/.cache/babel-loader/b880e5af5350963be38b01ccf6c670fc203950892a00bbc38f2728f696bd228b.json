{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Levi\\\\Desktop\\\\portfolio\\\\src\\\\ModeContext\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { useState, createContext } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { DndContext, DragOverlay, rectIntersection } from '@dnd-kit/core';\nimport { arrayMove } from '@dnd-kit/sortable';\nimport { NoteCard } from '../NoteCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ProgContext = /*#__PURE__*/createContext(undefined);\nexport const ModeContext = ({\n  children\n}) => {\n  _s();\n  const [dragId, setDragId] = useState(undefined);\n  const [activeStorage, setActiveStorage] = useState({\n    chord: undefined\n  });\n  const handleDragStart = ({\n    active\n  }) => {\n    setDragId(active.id);\n    if (active.data.current.chord) {\n      setActiveStorage(active.data.current);\n    }\n  };\n  const handleDragOver = ({\n    active,\n    over\n  }) => {\n    // console.log({activeDO: active})\n\n    if (!over || !over.data.current) {\n      // if object hovered over is not sortable\n\n      // console.log({active: active}, {over: over});\n\n      if (active.data.current.sortable) {\n        // remove from sortable\n        console.log('remove from sortable');\n        const oldIndex = active.data.current.sortable.index;\n        active.data.current.setFunc(items => items.slice(0, oldIndex).concat(items.slice(oldIndex + 1)));\n        return;\n      }\n      ;\n      return;\n    }\n    ;\n\n    // console.log({active: active}, {over: over});\n\n    if (active.data.current.chord) {\n      // if draggable is from table, NOT from sortable\n\n      const chord = active.data.current.chord;\n      const {\n        containerId: newContainerId,\n        index: newIndex,\n        items\n      } = over.data.current.sortable;\n      const setItemsFunc = over.data.current.setFunc;\n      const duplicateIndex = items.findIndex(i => i.id === dragId);\n      if (duplicateIndex === -1) {\n        // dragId not already in sortable\n\n        setItemsFunc(items => [...items, {\n          ...chord,\n          id: dragId\n        }]);\n        // setScalesFunc((prevScales: any) => {\n        //   const newScales = {...prevScales};          \n        //   newScales[dir.scale][dir.index].id = uuidv4();\n        //   return newScales;\n        // });\n      } else {\n        setItemsFunc(items => arrayMove(items, duplicateIndex, newIndex));\n      }\n      ;\n      return;\n    }\n    ;\n  };\n  const handleDragEnd = ({\n    active,\n    over\n  }) => {\n    if (!over) {\n      // cancel if drop invalid\n      console.log('drop location invalid');\n      return;\n    }\n    ;\n    if (over.data.current.sortable) {\n      // console.log({activeEnd: active}, {overEnd: over})\n      // const setScalesFunc = active.data.current.setFunc;\n      // const dir = active.data.current.chordDir;\n\n      console.log({\n        stored: activeStorage\n      });\n      activeStorage.setFunc(prevScales => {\n        const newScales = {\n          ...prevScales\n        };\n        newScales[activeStorage.chordDir.scale][activeStorage.chordDir.index].id = uuidv4();\n        return newScales;\n      });\n      console.log('chart -> sortable');\n      return;\n    }\n    if (active.data.current.sortable && over.data.current.sortable) {\n      console.log('sortable -> sortable');\n      const oldIndex = active.data.current.sortable.index;\n      const newIndex = over.data.current.sortable.index;\n      over.data.current.setFunc(items => arrayMove(items, oldIndex, newIndex));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    onDragStart: handleDragStart,\n    onDragCancel: () => {\n      setDragId(undefined);\n      setActiveStorage(undefined);\n    },\n    onDragOver: handleDragOver,\n    onDragEnd: handleDragEnd,\n    collisionDetection: rectIntersection,\n    children: [children, activeStorage ? /*#__PURE__*/_jsxDEV(DragOverlay, {\n      children: /*#__PURE__*/_jsxDEV(NoteCard, {\n        chord: activeStorage.chord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(ModeContext, \"Hn30mOVZ7uBrKYTQk1Kd9uM2//Q=\");\n_c = ModeContext;\nvar _c;\n$RefreshReg$(_c, \"ModeContext\");","map":{"version":3,"names":["useState","createContext","v4","uuidv4","DndContext","DragOverlay","rectIntersection","arrayMove","NoteCard","jsxDEV","_jsxDEV","Fragment","_Fragment","ProgContext","undefined","ModeContext","children","_s","dragId","setDragId","activeStorage","setActiveStorage","chord","handleDragStart","active","id","data","current","handleDragOver","over","sortable","console","log","oldIndex","index","setFunc","items","slice","concat","containerId","newContainerId","newIndex","setItemsFunc","duplicateIndex","findIndex","i","handleDragEnd","stored","prevScales","newScales","chordDir","scale","onDragStart","onDragCancel","onDragOver","onDragEnd","collisionDetection","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Levi/Desktop/portfolio/src/ModeContext/index.tsx"],"sourcesContent":["import { useState, useEffect, createContext } from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { DndContext, DragOverlay, rectIntersection, useDraggable, useDroppable } from '@dnd-kit/core';\nimport { CSS } from '@dnd-kit/utilities';\nimport { arrayMove, SortableContext, horizontalListSortingStrategy, useSortable } from '@dnd-kit/sortable';\nimport { NoteCard } from '../NoteCard';\n\n\nexport const ProgContext = createContext<any>(undefined);\n\n\nexport const ModeContext = ({children}: {children: any}) => {\n\n  const [dragId, setDragId] = useState<string | undefined>(undefined);\n  const [activeStorage, setActiveStorage] = useState<any | undefined>({chord: undefined});\n\n  const handleDragStart = ({active}: any) => {\n\n    setDragId(active.id); \n    \n    if (active.data.current.chord) {\n      setActiveStorage(active.data.current)\n    }\n  }\n\n  const handleDragOver = ({active, over}: any) => {\n\n    // console.log({activeDO: active})\n\n    if (!over || !over.data.current) {\n      // if object hovered over is not sortable\n\n      // console.log({active: active}, {over: over});\n\n      if (active.data.current.sortable) {\n        // remove from sortable\n        console.log('remove from sortable');\n\n        const oldIndex = active.data.current.sortable.index;\n        active.data.current.setFunc((items: any) => items.slice(0, oldIndex).concat(items.slice(oldIndex + 1)));\n\n        return\n      };\n\n      return\n    };\n\n    // console.log({active: active}, {over: over});\n\n    if (active.data.current.chord) {\n      // if draggable is from table, NOT from sortable\n\n      const chord = active.data.current.chord;\n      const {containerId: newContainerId, index: newIndex, items } = over.data.current.sortable;\n\n      const setItemsFunc = over.data.current.setFunc;\n\n      const duplicateIndex = items.findIndex((i: any) => i.id === dragId);\n\n      if (duplicateIndex === -1) {\n        // dragId not already in sortable\n\n        setItemsFunc((items: any) => [...items, {...chord, id: dragId}]);\n        // setScalesFunc((prevScales: any) => {\n        //   const newScales = {...prevScales};          \n        //   newScales[dir.scale][dir.index].id = uuidv4();\n        //   return newScales;\n        // });\n\n      } else {\n        setItemsFunc((items: any) => arrayMove(items, duplicateIndex, newIndex));\n      };\n\n      return\n    };\n  }\n\n\n  const handleDragEnd = ({active, over}: any) => {\n\n    if (!over) {\n      // cancel if drop invalid\n      console.log('drop location invalid');\n      return\n    };\n\n    if (over.data.current.sortable) {\n\n      // console.log({activeEnd: active}, {overEnd: over})\n      // const setScalesFunc = active.data.current.setFunc;\n      // const dir = active.data.current.chordDir;\n\n      console.log({stored: activeStorage})\n\n      activeStorage.setFunc((prevScales: any) => {\n        const newScales = {...prevScales};\n        newScales[activeStorage.chordDir.scale][activeStorage.chordDir.index].id = uuidv4();\n        return newScales;\n      });\n\n      console.log('chart -> sortable')\n      return\n    }\n\n    if (active.data.current.sortable && over.data.current.sortable) {\n\n      console.log('sortable -> sortable')\n\n      const oldIndex = active.data.current.sortable.index;\n      const newIndex = over.data.current.sortable.index;\n\n      over.data.current.setFunc((items: any) => arrayMove(items, oldIndex, newIndex));\n    }\n  };\n\n\n  return (\n    <DndContext\n      onDragStart={handleDragStart}\n      onDragCancel={() => {\n        setDragId(undefined); \n        setActiveStorage(undefined);\n      }}\n      onDragOver={handleDragOver}\n      onDragEnd={handleDragEnd}\n      collisionDetection={rectIntersection}\n    >\n      {children}\n      {activeStorage ? <DragOverlay><NoteCard chord={activeStorage.chord}/></DragOverlay> : <></>}\n    </DndContext>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}