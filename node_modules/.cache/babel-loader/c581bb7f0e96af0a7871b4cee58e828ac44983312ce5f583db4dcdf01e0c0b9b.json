{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Levi\\\\Desktop\\\\portfolio\\\\src\\\\ModeContext\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { useState, createContext } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { DndContext, DragOverlay, rectIntersection } from '@dnd-kit/core';\nimport { arrayMove } from '@dnd-kit/sortable';\nimport { NoteCard } from '../NoteCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ProgContext = /*#__PURE__*/createContext(undefined);\nexport const ModeContext = ({\n  children\n}) => {\n  _s();\n  const [dragId, setDragId] = useState(undefined);\n  const [payloadStorage, setPayloadStorage] = useState(undefined);\n  const handleDragStart = ({\n    active\n  }) => {\n    // console.log({activeStart: active});\n\n    setDragId(active.id);\n    if (active.data.current.payload) {\n      setPayloadStorage(active.data.current.payload);\n    }\n    ;\n  };\n  const handleDragOver = ({\n    active,\n    over\n  }) => {\n    if (!over || !over.data.current) {\n      // if object hovered over is not drop zone\n\n      // console.log({activeDO: active})\n\n      if (active.data.current.sortable) {\n        // if from sortable, remove card at index from sortable\n        console.log('remove from sortable');\n        console.log(active.data.current.sortable.items.filter()(id => id === active.data.current.payload.chord.id));\n\n        // const oldIndex = active.data.current.sortable.index;\n        const oldIndex = active.data.current.payload.index;\n        active.data.current.payload.setFunc(items => items.slice(0, oldIndex).concat(items.slice(oldIndex + 1)));\n        return;\n      }\n      ;\n      return;\n    }\n    ;\n    if (payloadStorage.chord) {\n      // if (active.data.current.sortable) {\n      console.log('add to sortable / swap');\n\n      // const chord = active.data.current.payload.chord;\n      const chord = payloadStorage.chord;\n      const {\n        index: newIndex,\n        items\n      } = over.data.current.sortable;\n      const setItemsFunc = over.data.current.payload.setFunc;\n\n      // const duplicateIndex = items.findIndex((i: any) => i.id === dragId);\n      const duplicateIndex = items.findIndex(id => id === dragId);\n      if (duplicateIndex === -1) {\n        // dragId not already in sortable\n        setItemsFunc(items => [...items, {\n          ...chord,\n          id: dragId\n        }]);\n      } else {\n        setItemsFunc(items => arrayMove(items, duplicateIndex, newIndex));\n      }\n      ;\n      return;\n    }\n    ;\n  };\n  const handleDragEnd = ({\n    active,\n    over\n  }) => {\n    if (!over) {\n      console.log('drop location invalid');\n      return;\n    }\n    ;\n    console.log(payloadStorage);\n    if (payloadStorage.origin === 'progBar' && over.data.current.sortable) {\n      console.log('sortable -> sortable');\n      const oldIndex = active.data.current.sortable.index;\n      const newIndex = over.data.current.sortable.index;\n      over.data.current.payload.setFunc(items => arrayMove(items, oldIndex, newIndex));\n      return;\n    }\n    if (payloadStorage.origin === 'chart' && over.data.current.sortable) {\n      console.log('chart -> sortable');\n      payloadStorage.setFunc(prevScales => {\n        const newScales = {\n          ...prevScales\n        };\n        newScales[payloadStorage.chordDir.scale][payloadStorage.chordDir.index].id = uuidv4();\n        return newScales;\n      });\n      return;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    onDragStart: handleDragStart,\n    onDragCancel: () => {\n      setDragId(undefined);\n      setPayloadStorage(undefined);\n    },\n    onDragOver: handleDragOver,\n    onDragEnd: handleDragEnd,\n    collisionDetection: rectIntersection,\n    children: [children, payloadStorage ? /*#__PURE__*/_jsxDEV(DragOverlay, {\n      children: /*#__PURE__*/_jsxDEV(NoteCard, {\n        chord: payloadStorage.chord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(ModeContext, \"frAVzaxChkxu/BOm1clq6mXyd58=\");\n_c = ModeContext;\nvar _c;\n$RefreshReg$(_c, \"ModeContext\");","map":{"version":3,"names":["useState","createContext","v4","uuidv4","DndContext","DragOverlay","rectIntersection","arrayMove","NoteCard","jsxDEV","_jsxDEV","Fragment","_Fragment","ProgContext","undefined","ModeContext","children","_s","dragId","setDragId","payloadStorage","setPayloadStorage","handleDragStart","active","id","data","current","payload","handleDragOver","over","sortable","console","log","items","filter","chord","oldIndex","index","setFunc","slice","concat","newIndex","setItemsFunc","duplicateIndex","findIndex","handleDragEnd","origin","prevScales","newScales","chordDir","scale","onDragStart","onDragCancel","onDragOver","onDragEnd","collisionDetection","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Levi/Desktop/portfolio/src/ModeContext/index.tsx"],"sourcesContent":["import { useState, useEffect, createContext } from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { DndContext, DragOverlay, rectIntersection, useDraggable, useDroppable } from '@dnd-kit/core';\nimport { CSS } from '@dnd-kit/utilities';\nimport { arrayMove, SortableContext, horizontalListSortingStrategy, useSortable } from '@dnd-kit/sortable';\nimport { NoteCard } from '../NoteCard';\n\n\nexport const ProgContext = createContext<any>(undefined);\n\n\nexport const ModeContext = ({children}: {children: any}) => {\n\n  const [dragId, setDragId] = useState<string | undefined>(undefined);\n  const [payloadStorage, setPayloadStorage] = useState<any | undefined>(undefined);\n\n  const handleDragStart = ({active}: any) => {\n\n    // console.log({activeStart: active});\n\n    setDragId(active.id); \n    if (active.data.current.payload) { setPayloadStorage(active.data.current.payload) };\n  }\n\n  const handleDragOver = ({active, over}: any) => {\n\n    if (!over || !over.data.current) {\n      // if object hovered over is not drop zone\n\n      // console.log({activeDO: active})\n\n      if (active.data.current.sortable) {\n        // if from sortable, remove card at index from sortable\n        console.log('remove from sortable');\n        console.log(active.data.current.sortable.items.filter()((id: string) => id === active.data.current.payload.chord.id));\n\n        // const oldIndex = active.data.current.sortable.index;\n        const oldIndex = active.data.current.payload.index;\n        active.data.current.payload.setFunc((items: any) => items.slice(0, oldIndex).concat(items.slice(oldIndex + 1)));\n\n        return\n      };\n\n      return\n    };\n\n    if (payloadStorage.chord) {\n    // if (active.data.current.sortable) {\n        console.log('add to sortable / swap');\n\n      // const chord = active.data.current.payload.chord;\n      const chord = payloadStorage.chord;\n      const {index: newIndex, items } = over.data.current.sortable;\n      const setItemsFunc = over.data.current.payload.setFunc;\n\n      // const duplicateIndex = items.findIndex((i: any) => i.id === dragId);\n      const duplicateIndex = items.findIndex((id: any) => id === dragId);\n\n      if (duplicateIndex === -1) {\n        // dragId not already in sortable\n        setItemsFunc((items: any) => [...items, {...chord, id: dragId}]);\n      } else {\n        setItemsFunc((items: any) => arrayMove(items, duplicateIndex, newIndex));\n      };\n\n      return\n    };\n  }\n\n\n  const handleDragEnd = ({active, over}: any) => {\n\n    if (!over) {\n      console.log('drop location invalid');\n      return\n    };\n\n    console.log(payloadStorage);\n\n    if (payloadStorage.origin === 'progBar' && over.data.current.sortable) {\n      console.log('sortable -> sortable')\n\n      const oldIndex = active.data.current.sortable.index;\n      const newIndex = over.data.current.sortable.index;\n\n      over.data.current.payload.setFunc((items: any) => arrayMove(items, oldIndex, newIndex));\n      return\n    }\n\n    if (payloadStorage.origin === 'chart' && over.data.current.sortable) {\n      console.log('chart -> sortable')\n\n      payloadStorage.setFunc((prevScales: any) => {\n        const newScales = {...prevScales};\n        newScales[payloadStorage.chordDir.scale][payloadStorage.chordDir.index].id = uuidv4();\n        return newScales;\n      });\n\n      return\n    }\n  };\n\n\n  return (\n    <DndContext\n      onDragStart={handleDragStart}\n      onDragCancel={() => {\n        setDragId(undefined); \n        setPayloadStorage(undefined);\n      }}\n      onDragOver={handleDragOver}\n      onDragEnd={handleDragEnd}\n      collisionDetection={rectIntersection}\n    >\n      {children}\n      {payloadStorage ? <DragOverlay><NoteCard chord={payloadStorage.chord}/></DragOverlay> : <></>}\n    </DndContext>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}