{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Levi\\\\Desktop\\\\portfolio\\\\src\\\\ModeContext\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { useState, createContext } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { DndContext, DragOverlay, rectIntersection } from '@dnd-kit/core';\nimport { arrayMove } from '@dnd-kit/sortable';\nimport { NoteCard } from '../NoteCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProgContext = /*#__PURE__*/createContext(undefined);\nexport const ModeContext = ({\n  children\n}) => {\n  _s();\n  const [dragId, setDragId] = useState(undefined);\n  const [dragChord, setDragChord] = useState(undefined);\n  const handleDragOver = ({\n    active,\n    over\n  }) => {\n    console.log({\n      active: active\n    });\n    if (!over || !over.data.current) {\n      // if object hovered over is not sortable\n\n      console.log({\n        active: active\n      }, {\n        over: over\n      });\n      if (active.data.current.sortable) {\n        // remove from sortable\n        console.log('remove from sortable');\n        const oldIndex = active.data.current.sortable.index;\n        active.data.current.setFunc(items => items.slice(0, oldIndex).concat(items.slice(oldIndex + 1)));\n        return;\n      }\n      ;\n      return;\n    }\n    ;\n\n    // console.log({active: active}, {over: over});\n\n    if (active.data.current.chord) {\n      // if draggable is from table, NOT from sortable\n\n      const chord = active.data.current.chord;\n      const coords = active.data.current.chordCoords;\n      const {\n        containerId: newContainerId,\n        index: newIndex,\n        items\n      } = over.data.current.sortable;\n      const setScalesFunc = active.data.current.setFunc;\n      const setItemsFunc = over.data.current.setFunc;\n      const duplicateIndex = items.findIndex(i => i.id === dragId);\n      if (duplicateIndex === -1) {\n        // dragId not already in sortable\n\n        setItemsFunc(items => [...items, {\n          ...chord,\n          id: dragId\n        }]);\n        setScalesFunc(prevScales => {\n          const newScales = {\n            ...prevScales\n          };\n          newScales[coords.scale][coords.index].id = uuidv4();\n          return newScales;\n        });\n      } else {\n        setItemsFunc(items => arrayMove(items, duplicateIndex, newIndex));\n      }\n      ;\n      return;\n    }\n    ;\n  };\n  const handleDragEnd = ({\n    active,\n    over\n  }) => {\n    if (!over) {\n      // if (active.data.current.sortable) {\n      //   // remove from sortable\n      //   console.log('remove from sortable');\n\n      //   const oldIndex = active.data.current.sortable.index;\n      //   active.data.current.setFunc((items: any) => items.slice(0, oldIndex).concat(items.slice(oldIndex + 1)));\n\n      //   return\n      // };\n\n      // cancel if drop invalid\n      console.log('drop location invalid');\n      return;\n    }\n    ;\n\n    // if (over.data.current.sortable) {\n    if (active.data.current.sortable && over.data.current.sortable) {\n      console.log('sortable -> sortable');\n      const oldIndex = active.data.current.sortable.index;\n      const newIndex = over.data.current.sortable.index;\n      over.data.current.setFunc(items => arrayMove(items, oldIndex, newIndex));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    onDragStart: ({\n      active\n    }) => {\n      setDragId(active.id);\n      if (active.data.current.chord) {\n        setDragChord(active.data.current.chord);\n      }\n    },\n    onDragCancel: () => {\n      setDragId(undefined);\n      setDragChord(undefined);\n    },\n    onDragOver: handleDragOver,\n    onDragEnd: handleDragEnd,\n    collisionDetection: rectIntersection,\n    children: [children, /*#__PURE__*/_jsxDEV(DragOverlay, {\n      children: /*#__PURE__*/_jsxDEV(NoteCard, {\n        chord: dragChord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(ModeContext, \"c1NUufkNePtynEsjNvSZUFq7l9M=\");\n_c = ModeContext;\nvar _c;\n$RefreshReg$(_c, \"ModeContext\");","map":{"version":3,"names":["useState","createContext","v4","uuidv4","DndContext","DragOverlay","rectIntersection","arrayMove","NoteCard","jsxDEV","_jsxDEV","ProgContext","undefined","ModeContext","children","_s","dragId","setDragId","dragChord","setDragChord","handleDragOver","active","over","console","log","data","current","sortable","oldIndex","index","setFunc","items","slice","concat","chord","coords","chordCoords","containerId","newContainerId","newIndex","setScalesFunc","setItemsFunc","duplicateIndex","findIndex","i","id","prevScales","newScales","scale","handleDragEnd","onDragStart","onDragCancel","onDragOver","onDragEnd","collisionDetection","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Levi/Desktop/portfolio/src/ModeContext/index.tsx"],"sourcesContent":["import { useState, useEffect, createContext } from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { DndContext, DragOverlay, rectIntersection, useDraggable, useDroppable } from '@dnd-kit/core';\nimport { CSS } from '@dnd-kit/utilities';\nimport { arrayMove, SortableContext, horizontalListSortingStrategy, useSortable } from '@dnd-kit/sortable';\nimport { NoteCard } from '../NoteCard';\n\n\nexport const ProgContext = createContext<any>(undefined);\n\n\nexport const ModeContext = ({children}: {children: any}) => {\n\n  const [dragId, setDragId] = useState<string | undefined>(undefined);\n  const [dragChord, setDragChord] = useState<any | undefined>(undefined);\n\n  const handleDragOver = ({active, over}: any) => {\n\n    console.log({active: active})\n\n    if (!over || !over.data.current) {\n      // if object hovered over is not sortable\n\n      console.log({active: active}, {over: over});\n\n      if (active.data.current.sortable) {\n        // remove from sortable\n        console.log('remove from sortable');\n\n        const oldIndex = active.data.current.sortable.index;\n        active.data.current.setFunc((items: any) => items.slice(0, oldIndex).concat(items.slice(oldIndex + 1)));\n\n        return\n      };\n\n      return\n    };\n\n    // console.log({active: active}, {over: over});\n\n    if (active.data.current.chord) {\n      // if draggable is from table, NOT from sortable\n\n      const chord = active.data.current.chord;\n      const coords = active.data.current.chordCoords;\n      const {containerId: newContainerId, index: newIndex, items } = over.data.current.sortable;\n\n      const setScalesFunc = active.data.current.setFunc;\n      const setItemsFunc = over.data.current.setFunc;\n\n      const duplicateIndex = items.findIndex((i: any) => i.id === dragId);\n\n      if (duplicateIndex === -1) {\n        // dragId not already in sortable\n\n        setItemsFunc((items: any) => [...items, {...chord, id: dragId}]);\n        setScalesFunc((prevScales: any) => {\n          const newScales = {...prevScales};          \n          newScales[coords.scale][coords.index].id = uuidv4();\n          return newScales;\n        });\n\n      } else {\n        setItemsFunc((items: any) => arrayMove(items, duplicateIndex, newIndex));\n      };\n\n      return\n    };\n  }\n\n\n  const handleDragEnd = ({active, over}: any) => {\n\n    if (!over) {\n      // if (active.data.current.sortable) {\n      //   // remove from sortable\n      //   console.log('remove from sortable');\n\n      //   const oldIndex = active.data.current.sortable.index;\n      //   active.data.current.setFunc((items: any) => items.slice(0, oldIndex).concat(items.slice(oldIndex + 1)));\n\n      //   return\n      // };\n\n      // cancel if drop invalid\n      console.log('drop location invalid');\n      return\n    };\n\n    // if (over.data.current.sortable) {\n    if (active.data.current.sortable && over.data.current.sortable) {\n\n      console.log('sortable -> sortable')\n\n      const oldIndex = active.data.current.sortable.index;\n      const newIndex = over.data.current.sortable.index;\n\n      over.data.current.setFunc((items: any) => arrayMove(items, oldIndex, newIndex));\n    }\n  };\n\n\n  return (\n    <DndContext\n      onDragStart={({active}: any) => {\n        setDragId(active.id); \n        if (active.data.current.chord) {\n          setDragChord(active.data.current.chord)\n        }\n      }}\n      onDragCancel={() => {\n        setDragId(undefined); \n        setDragChord(undefined);\n      }}\n      onDragOver={handleDragOver}\n      onDragEnd={handleDragEnd}\n      collisionDetection={rectIntersection}\n    >\n      {children}\n      <DragOverlay>\n        <NoteCard chord={dragChord}/>\n      </DragOverlay>\n    </DndContext>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}