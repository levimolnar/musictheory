{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Levi\\\\Desktop\\\\portfolio\\\\src\\\\ModeContext\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { useState, createContext } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { DndContext, DragOverlay, rectIntersection } from '@dnd-kit/core';\nimport { arrayMove } from '@dnd-kit/sortable';\nimport { NoteCard } from '../NoteCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ProgContext = /*#__PURE__*/createContext(undefined);\nexport const ModeContext = ({\n  children\n}) => {\n  _s();\n  const [dragId, setDragId] = useState(undefined);\n  const [payloadStorage, setPayloadStorage] = useState(undefined);\n  const handleDragStart = ({\n    active\n  }) => {\n    // console.log({activeStart: active});\n\n    setDragId(active.id);\n    if (active.data.current.payload) {\n      setPayloadStorage(active.data.current.payload);\n    }\n    ;\n  };\n  const handleDragOver = ({\n    active,\n    over\n  }) => {\n    if (!over || !over.data.current) {\n      // if object hovered over is not drop zone\n\n      console.log({\n        activeDO: active\n      });\n      if (active.data.current.sortable) {\n        // if from sortable, remove card at index from sortable\n        console.log('remove from sortable');\n\n        // const oldIndex = active.data.current.sortable.index;\n        const oldIndex = active.data.current.payload.index;\n        console.log({\n          index: active\n        });\n        active.data.current.payload.setFunc(items => items.slice(0, oldIndex).concat(items.slice(oldIndex + 1)));\n        return;\n      }\n      ;\n      return;\n    }\n    ;\n    if (active.data.current.payload.chord) {\n      const chord = active.data.current.payload.chord;\n      const {\n        containerId: xyz,\n        index: newIndex,\n        items\n      } = over.data.current.sortable;\n      const setItemsFunc = over.data.current.payload.setFunc;\n      const duplicateIndex = items.findIndex(i => i.id === dragId);\n      if (duplicateIndex === -1) {\n        // dragId not already in sortable\n\n        setItemsFunc(items => [...items, {\n          ...chord,\n          id: dragId\n        }]);\n        // setScalesFunc((prevScales: any) => {\n        //   const newScales = {...prevScales};          \n        //   newScales[dir.scale][dir.index].id = uuidv4();\n        //   return newScales;\n        // });\n      } else {\n        setItemsFunc(items => arrayMove(items, duplicateIndex, newIndex));\n      }\n      ;\n      return;\n    }\n    ;\n  };\n  const handleDragEnd = ({\n    active,\n    over\n  }) => {\n    if (!over) {\n      // cancel if drop invalid\n      console.log('drop location invalid');\n      return;\n    }\n    ;\n    if (over.data.current.sortable) {\n      payloadStorage.setFunc(prevScales => {\n        const newScales = {\n          ...prevScales\n        };\n        newScales[payloadStorage.chordDir.scale][payloadStorage.chordDir.index].id = uuidv4();\n        return newScales;\n      });\n      console.log('chart -> sortable');\n      return;\n    }\n    if (active.data.current.sortable && over.data.current.sortable) {\n      console.log('sortable -> sortable');\n      const oldIndex = active.data.current.sortable.index;\n      const newIndex = over.data.current.sortable.index;\n      over.data.current.setFunc(items => arrayMove(items, oldIndex, newIndex));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    onDragStart: handleDragStart,\n    onDragCancel: () => {\n      setDragId(undefined);\n      setPayloadStorage(undefined);\n    },\n    onDragOver: handleDragOver,\n    onDragEnd: handleDragEnd,\n    collisionDetection: rectIntersection,\n    children: [children, payloadStorage ? /*#__PURE__*/_jsxDEV(DragOverlay, {\n      children: /*#__PURE__*/_jsxDEV(NoteCard, {\n        chord: payloadStorage.chord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(ModeContext, \"frAVzaxChkxu/BOm1clq6mXyd58=\");\n_c = ModeContext;\nvar _c;\n$RefreshReg$(_c, \"ModeContext\");","map":{"version":3,"names":["useState","createContext","v4","uuidv4","DndContext","DragOverlay","rectIntersection","arrayMove","NoteCard","jsxDEV","_jsxDEV","Fragment","_Fragment","ProgContext","undefined","ModeContext","children","_s","dragId","setDragId","payloadStorage","setPayloadStorage","handleDragStart","active","id","data","current","payload","handleDragOver","over","console","log","activeDO","sortable","oldIndex","index","setFunc","items","slice","concat","chord","containerId","xyz","newIndex","setItemsFunc","duplicateIndex","findIndex","i","handleDragEnd","prevScales","newScales","chordDir","scale","onDragStart","onDragCancel","onDragOver","onDragEnd","collisionDetection","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Levi/Desktop/portfolio/src/ModeContext/index.tsx"],"sourcesContent":["import { useState, useEffect, createContext } from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { DndContext, DragOverlay, rectIntersection, useDraggable, useDroppable } from '@dnd-kit/core';\nimport { CSS } from '@dnd-kit/utilities';\nimport { arrayMove, SortableContext, horizontalListSortingStrategy, useSortable } from '@dnd-kit/sortable';\nimport { NoteCard } from '../NoteCard';\n\n\nexport const ProgContext = createContext<any>(undefined);\n\n\nexport const ModeContext = ({children}: {children: any}) => {\n\n  const [dragId, setDragId] = useState<string | undefined>(undefined);\n  const [payloadStorage, setPayloadStorage] = useState<any | undefined>(undefined);\n\n  const handleDragStart = ({active}: any) => {\n\n    // console.log({activeStart: active});\n\n    setDragId(active.id); \n    if (active.data.current.payload) { setPayloadStorage(active.data.current.payload) };\n  }\n\n  const handleDragOver = ({active, over}: any) => {\n\n    if (!over || !over.data.current) {\n      // if object hovered over is not drop zone\n\n      console.log({activeDO: active})\n\n      if (active.data.current.sortable) {\n        // if from sortable, remove card at index from sortable\n        console.log('remove from sortable');\n\n        // const oldIndex = active.data.current.sortable.index;\n        const oldIndex = active.data.current.payload.index;\n        console.log({index: active});\n        active.data.current.payload.setFunc((items: any) => items.slice(0, oldIndex).concat(items.slice(oldIndex + 1)));\n\n        return\n      };\n\n      return\n    };\n\n    if (active.data.current.payload.chord) {\n\n      const chord = active.data.current.payload.chord;\n      const {containerId: xyz, index: newIndex, items } = over.data.current.sortable;\n\n      const setItemsFunc = over.data.current.payload.setFunc;\n      const duplicateIndex = items.findIndex((i: any) => i.id === dragId);\n\n      if (duplicateIndex === -1) {\n        // dragId not already in sortable\n\n        setItemsFunc((items: any) => [...items, {...chord, id: dragId}]);\n        // setScalesFunc((prevScales: any) => {\n        //   const newScales = {...prevScales};          \n        //   newScales[dir.scale][dir.index].id = uuidv4();\n        //   return newScales;\n        // });\n\n      } else {\n        setItemsFunc((items: any) => arrayMove(items, duplicateIndex, newIndex));\n      };\n\n      return\n    };\n  }\n\n\n  const handleDragEnd = ({active, over}: any) => {\n\n    if (!over) {\n      // cancel if drop invalid\n      console.log('drop location invalid');\n      return\n    };\n\n    if (over.data.current.sortable) {\n      payloadStorage.setFunc((prevScales: any) => {\n        const newScales = {...prevScales};\n        newScales[payloadStorage.chordDir.scale][payloadStorage.chordDir.index].id = uuidv4();\n        return newScales;\n      });\n\n      console.log('chart -> sortable')\n      return\n    }\n\n    if (active.data.current.sortable && over.data.current.sortable) {\n\n      console.log('sortable -> sortable')\n\n      const oldIndex = active.data.current.sortable.index;\n      const newIndex = over.data.current.sortable.index;\n\n      over.data.current.setFunc((items: any) => arrayMove(items, oldIndex, newIndex));\n    }\n  };\n\n\n  return (\n    <DndContext\n      onDragStart={handleDragStart}\n      onDragCancel={() => {\n        setDragId(undefined); \n        setPayloadStorage(undefined);\n      }}\n      onDragOver={handleDragOver}\n      onDragEnd={handleDragEnd}\n      collisionDetection={rectIntersection}\n    >\n      {children}\n      {payloadStorage ? <DragOverlay><NoteCard chord={payloadStorage.chord}/></DragOverlay> : <></>}\n    </DndContext>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}