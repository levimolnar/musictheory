{"ast":null,"code":"// const defScaleObject = {\n//   \"Diatonic\": {\n//     \"lydian\":     [0,2,4,6,7,9,11], \n//     \"ionian\":     [0,2,4,5,7,9,11], \n//     \"mixolydian\": [0,2,4,5,7,9,10], \n//     \"dorian\":     [0,2,3,5,7,9,10], \n//     \"aeolian\":    [0,2,3,5,7,8,10], \n//     \"phrygian\":   [0,1,3,5,7,8,10], \n//     \"locrian\":    [0,1,3,5,6,8,10],\n//   },\n// }\n\n// const noteMatrix: Array<Array<{'number': number, 'char': string}>> = [\n//   [{'number': 10,'char': 'C\\uED64'}, {'number': 11,'char': 'C\\uED60'}, {'number': 0, 'char': 'C'}, {'number': 1, 'char': 'C\\uED62'}, {'number': 2, 'char': 'C\\uED63'}],\n//   [{'number': 0, 'char': 'D\\uED64'}, {'number': 1, 'char': 'D\\uED60'}, {'number': 2, 'char': 'D'}, {'number': 3, 'char': 'D\\uED62'}, {'number': 4, 'char': 'D\\uED63'}],\n//   [{'number': 2, 'char': 'E\\uED64'}, {'number': 3, 'char': 'E\\uED60'}, {'number': 4, 'char': 'E'}, {'number': 5, 'char': 'E\\uED62'}, {'number': 6, 'char': 'E\\uED63'}],\n//   [{'number': 3, 'char': 'F\\uED64'}, {'number': 4, 'char': 'F\\uED60'}, {'number': 5, 'char': 'F'}, {'number': 6, 'char': 'F\\uED62'}, {'number': 7, 'char': 'F\\uED63'}],\n//   [{'number': 5, 'char': 'G\\uED64'}, {'number': 6, 'char': 'G\\uED60'}, {'number': 7, 'char': 'G'}, {'number': 8, 'char': 'G\\uED62'}, {'number': 9, 'char': 'G\\uED63'}],\n//   [{'number': 7, 'char': 'A\\uED64'}, {'number': 8, 'char': 'A\\uED60'}, {'number': 9, 'char': 'A'}, {'number': 10,'char': 'A\\uED62'}, {'number': 11,'char': 'A\\uED63'}],\n//   [{'number': 9, 'char': 'B\\uED64'}, {'number': 10,'char': 'B\\uED60'}, {'number': 11,'char': 'B'}, {'number': 0, 'char': 'B\\uED62'}, {'number': 1, 'char': 'B\\uED63'}],\n// ]\n\n// const positions: Array<Array<[number, number]>> = [\n//   [[0,2], [6,3], [1,0]],\n//   [[1,1], [0,3], [6,4]],\n//   [[1,2], [2,0], [0,4]],\n//   [[2,1], [1,3], [3,0]],\n//   [[2,2], [3,1], [1,4]],\n//   [[3,2], [2,3], [4,0]],\n//   [[4,1], [3,3], [2,4]],\n//   [[4,2], [5,0], [3,4]],\n//   [[5,1], [4,3]],\n//   [[5,2], [6,0], [4,4]],\n//   [[6,1], [5,3], [0,0]],\n//   [[6,2], [0,1], [5,4]],\n// ]\nconst noteMatrix = [{\n  [-2]: {\n    'number': 10,\n    'char': 'C\\uED64'\n  },\n  [-1]: {\n    'number': 11,\n    'char': 'C\\uED60'\n  },\n  0: {\n    'number': 0,\n    'char': 'C'\n  },\n  1: {\n    'number': 1,\n    'char': 'C\\uED62'\n  },\n  2: {\n    'number': 2,\n    'char': 'C\\uED63'\n  }\n}, {\n  [-2]: {\n    'number': 0,\n    'char': 'D\\uED64'\n  },\n  [-1]: {\n    'number': 1,\n    'char': 'D\\uED60'\n  },\n  0: {\n    'number': 2,\n    'char': 'D'\n  },\n  1: {\n    'number': 3,\n    'char': 'D\\uED62'\n  },\n  2: {\n    'number': 4,\n    'char': 'D\\uED63'\n  }\n}, {\n  [-2]: {\n    'number': 2,\n    'char': 'E\\uED64'\n  },\n  [-1]: {\n    'number': 3,\n    'char': 'E\\uED60'\n  },\n  0: {\n    'number': 4,\n    'char': 'E'\n  },\n  1: {\n    'number': 5,\n    'char': 'E\\uED62'\n  },\n  2: {\n    'number': 6,\n    'char': 'E\\uED63'\n  }\n}, {\n  [-2]: {\n    'number': 3,\n    'char': 'F\\uED64'\n  },\n  [-1]: {\n    'number': 4,\n    'char': 'F\\uED60'\n  },\n  0: {\n    'number': 5,\n    'char': 'F'\n  },\n  1: {\n    'number': 6,\n    'char': 'F\\uED62'\n  },\n  2: {\n    'number': 7,\n    'char': 'F\\uED63'\n  }\n}, {\n  [-2]: {\n    'number': 5,\n    'char': 'G\\uED64'\n  },\n  [-1]: {\n    'number': 6,\n    'char': 'G\\uED60'\n  },\n  0: {\n    'number': 7,\n    'char': 'G'\n  },\n  1: {\n    'number': 8,\n    'char': 'G\\uED62'\n  },\n  2: {\n    'number': 9,\n    'char': 'G\\uED63'\n  }\n}, {\n  [-2]: {\n    'number': 7,\n    'char': 'A\\uED64'\n  },\n  [-1]: {\n    'number': 8,\n    'char': 'A\\uED60'\n  },\n  0: {\n    'number': 9,\n    'char': 'A'\n  },\n  1: {\n    'number': 10,\n    'char': 'A\\uED62'\n  },\n  2: {\n    'number': 11,\n    'char': 'A\\uED63'\n  }\n}, {\n  [-2]: {\n    'number': 9,\n    'char': 'B\\uED64'\n  },\n  [-1]: {\n    'number': 10,\n    'char': 'B\\uED60'\n  },\n  0: {\n    'number': 11,\n    'char': 'B'\n  },\n  1: {\n    'number': 0,\n    'char': 'B\\uED62'\n  },\n  2: {\n    'number': 1,\n    'char': 'B\\uED63'\n  }\n}];\nconst positions = [[[0, 0], [6, 1], [1, -2]], [[1, -1], [0, 1], [6, 2]], [[1, 0], [2, -2], [0, 2]], [[2, -1], [1, 1], [3, -2]], [[2, 0], [3, -1], [1, 2]], [[3, 0], [2, 1], [4, -2]], [[4, -1], [3, 1], [2, 2]], [[4, 0], [5, -2], [3, 2]], [[5, -1], [4, 1]], [[5, 0], [6, -2], [4, 2]], [[6, -1], [5, 1], [0, -2]], [[6, 0], [0, -1], [5, 2]]];\nexport class ModeList {\n  constructor(modeObj = {}, transpose = 0) {\n    this.modes = void 0;\n    this.transpose = void 0;\n    this.modes = [];\n    this.transpose = transpose;\n    Object.entries(modeObj).forEach(([name, recipe]) => this.addMode(name, recipe));\n  }\n  addMode(modeName, modeRecipe) {\n    const transposedRecipe = Array.from(modeRecipe, i => (i + this.transpose) % 12);\n    const startingCoords = positions[this.transpose];\n    this.modes.push(new Mode(modeName, transposedRecipe, startingCoords));\n  }\n\n  // setObject(modeObj: {[key: string]: Array<number>}, transpose: number) { \n  //   this.modeObj = modeObj;\n  //   this.transpose = transpose;\n  // }\n}\n\nclass Mode {\n  constructor(modeName, modeRecipe, startingCoords) {\n    this.name = void 0;\n    this.length = void 0;\n    this.chords = void 0;\n    this.name = modeName;\n    this.length = modeRecipe.length;\n    this.chords = [];\n    startingCoords.forEach(([startX, _], i) => {\n      const xArray = Array.from({\n        length: this.length\n      }, (_, i) => (startX + i) % this.length);\n      let accidentalCount = 0;\n\n      // xArray.forEach((x, j) => {\n      //   // const indexY: any = Object.keys(noteMatrix[x]).find((key: any) => noteMatrix[x][key].number === modeRecipe[j]);\n      //   const match: any = Object.entries(noteMatrix[x]).find(([_, { number }]) => number === modeRecipe[j]);\n      //   if (match) {\n      //     const [y, {number, char}] = match;\n      //     accidentalCount += Math.abs(y);\n      //   } else {\n      //     accidentalCount = 999;\n      //     return;\n      //   };\n      // })\n\n      for (let x of xArray) {\n        const match = Object.entries(noteMatrix[x]).find(([_, {\n          number\n        }]) => number === modeRecipe[j]);\n      }\n      console.log(`ACC. COUNT: ${accidentalCount}`);\n    });\n    console.log('NEXT ');\n\n    // modeRecipe.forEach((noteNumber: number) => this.addChord());\n  }\n\n  addChord() {\n    this.chords.push(new Chord());\n  }\n}\nclass Chord {\n  constructor() {\n    this.id = void 0;\n    this.root = void 0;\n    this.numeral = void 0;\n    this.type = void 0;\n    this.id = \"id\";\n    this.root = \"C\";\n    this.numeral = \"I\";\n    this.type = {\n      full: \"Major\",\n      short: \"maj\",\n      symbol: \"\"\n    };\n  }\n}","map":{"version":3,"names":["noteMatrix","positions","ModeList","constructor","modeObj","transpose","modes","Object","entries","forEach","name","recipe","addMode","modeName","modeRecipe","transposedRecipe","Array","from","i","startingCoords","push","Mode","length","chords","startX","_","xArray","accidentalCount","x","match","find","number","j","console","log","addChord","Chord","id","root","numeral","type","full","short","symbol"],"sources":["C:/Users/Levi/Desktop/portfolio/src/Chart/pitchSpellerOOP.ts"],"sourcesContent":["import { v4 as uuidv4 } from 'uuid';\r\nimport { chordIntervals } from './chordIntervals';\r\n\r\n// const defScaleObject = {\r\n//   \"Diatonic\": {\r\n//     \"lydian\":     [0,2,4,6,7,9,11], \r\n//     \"ionian\":     [0,2,4,5,7,9,11], \r\n//     \"mixolydian\": [0,2,4,5,7,9,10], \r\n//     \"dorian\":     [0,2,3,5,7,9,10], \r\n//     \"aeolian\":    [0,2,3,5,7,8,10], \r\n//     \"phrygian\":   [0,1,3,5,7,8,10], \r\n//     \"locrian\":    [0,1,3,5,6,8,10],\r\n//   },\r\n// }\r\n\r\n// const noteMatrix: Array<Array<{'number': number, 'char': string}>> = [\r\n//   [{'number': 10,'char': 'C\\uED64'}, {'number': 11,'char': 'C\\uED60'}, {'number': 0, 'char': 'C'}, {'number': 1, 'char': 'C\\uED62'}, {'number': 2, 'char': 'C\\uED63'}],\r\n//   [{'number': 0, 'char': 'D\\uED64'}, {'number': 1, 'char': 'D\\uED60'}, {'number': 2, 'char': 'D'}, {'number': 3, 'char': 'D\\uED62'}, {'number': 4, 'char': 'D\\uED63'}],\r\n//   [{'number': 2, 'char': 'E\\uED64'}, {'number': 3, 'char': 'E\\uED60'}, {'number': 4, 'char': 'E'}, {'number': 5, 'char': 'E\\uED62'}, {'number': 6, 'char': 'E\\uED63'}],\r\n//   [{'number': 3, 'char': 'F\\uED64'}, {'number': 4, 'char': 'F\\uED60'}, {'number': 5, 'char': 'F'}, {'number': 6, 'char': 'F\\uED62'}, {'number': 7, 'char': 'F\\uED63'}],\r\n//   [{'number': 5, 'char': 'G\\uED64'}, {'number': 6, 'char': 'G\\uED60'}, {'number': 7, 'char': 'G'}, {'number': 8, 'char': 'G\\uED62'}, {'number': 9, 'char': 'G\\uED63'}],\r\n//   [{'number': 7, 'char': 'A\\uED64'}, {'number': 8, 'char': 'A\\uED60'}, {'number': 9, 'char': 'A'}, {'number': 10,'char': 'A\\uED62'}, {'number': 11,'char': 'A\\uED63'}],\r\n//   [{'number': 9, 'char': 'B\\uED64'}, {'number': 10,'char': 'B\\uED60'}, {'number': 11,'char': 'B'}, {'number': 0, 'char': 'B\\uED62'}, {'number': 1, 'char': 'B\\uED63'}],\r\n// ]\r\n\r\n// const positions: Array<Array<[number, number]>> = [\r\n//   [[0,2], [6,3], [1,0]],\r\n//   [[1,1], [0,3], [6,4]],\r\n//   [[1,2], [2,0], [0,4]],\r\n//   [[2,1], [1,3], [3,0]],\r\n//   [[2,2], [3,1], [1,4]],\r\n//   [[3,2], [2,3], [4,0]],\r\n//   [[4,1], [3,3], [2,4]],\r\n//   [[4,2], [5,0], [3,4]],\r\n//   [[5,1], [4,3]],\r\n//   [[5,2], [6,0], [4,4]],\r\n//   [[6,1], [5,3], [0,0]],\r\n//   [[6,2], [0,1], [5,4]],\r\n// ]\r\n\r\nconst noteMatrix: Array<{[key: number]: {'number': number, 'char': string}}> = [\r\n  {[-2]: {'number': 10,'char': 'C\\uED64'}, [-1]: {'number': 11,'char': 'C\\uED60'}, 0: {'number': 0, 'char': 'C'}, 1: {'number': 1, 'char': 'C\\uED62'}, 2: {'number': 2, 'char': 'C\\uED63'}},\r\n  {[-2]: {'number': 0, 'char': 'D\\uED64'}, [-1]: {'number': 1, 'char': 'D\\uED60'}, 0: {'number': 2, 'char': 'D'}, 1: {'number': 3, 'char': 'D\\uED62'}, 2: {'number': 4, 'char': 'D\\uED63'}},\r\n  {[-2]: {'number': 2, 'char': 'E\\uED64'}, [-1]: {'number': 3, 'char': 'E\\uED60'}, 0: {'number': 4, 'char': 'E'}, 1: {'number': 5, 'char': 'E\\uED62'}, 2: {'number': 6, 'char': 'E\\uED63'}},\r\n  {[-2]: {'number': 3, 'char': 'F\\uED64'}, [-1]: {'number': 4, 'char': 'F\\uED60'}, 0: {'number': 5, 'char': 'F'}, 1: {'number': 6, 'char': 'F\\uED62'}, 2: {'number': 7, 'char': 'F\\uED63'}},\r\n  {[-2]: {'number': 5, 'char': 'G\\uED64'}, [-1]: {'number': 6, 'char': 'G\\uED60'}, 0: {'number': 7, 'char': 'G'}, 1: {'number': 8, 'char': 'G\\uED62'}, 2: {'number': 9, 'char': 'G\\uED63'}},\r\n  {[-2]: {'number': 7, 'char': 'A\\uED64'}, [-1]: {'number': 8, 'char': 'A\\uED60'}, 0: {'number': 9, 'char': 'A'}, 1: {'number': 10,'char': 'A\\uED62'}, 2: {'number': 11,'char': 'A\\uED63'}},\r\n  {[-2]: {'number': 9, 'char': 'B\\uED64'}, [-1]: {'number': 10,'char': 'B\\uED60'}, 0: {'number': 11,'char': 'B'}, 1: {'number': 0, 'char': 'B\\uED62'}, 2: {'number': 1, 'char': 'B\\uED63'}},\r\n]\r\n\r\nconst positions: Array<Array<[number, number]>> = [\r\n  [[0, 0], [6, 1], [1,-2]],\r\n  [[1,-1], [0, 1], [6, 2]],\r\n  [[1, 0], [2,-2], [0, 2]],\r\n  [[2,-1], [1, 1], [3,-2]],\r\n  [[2, 0], [3,-1], [1, 2]],\r\n  [[3, 0], [2, 1], [4,-2]],\r\n  [[4,-1], [3, 1], [2, 2]],\r\n  [[4, 0], [5,-2], [3, 2]],\r\n  [[5,-1], [4, 1]],\r\n  [[5, 0], [6,-2], [4, 2]],\r\n  [[6,-1], [5, 1], [0,-2]],\r\n  [[6, 0], [0,-1], [5, 2]],\r\n]\r\n\r\nexport class ModeList {\r\n  modes: Array<any>\r\n  transpose: number;\r\n\r\n  constructor(modeObj: {[key: string]: Array<number>} = {}, transpose: number = 0) {\r\n    this.modes = [];\r\n    this.transpose = transpose;\r\n    Object.entries(modeObj).forEach(([name, recipe]) => this.addMode(name, recipe));\r\n  }\r\n\r\n  addMode(modeName: string, modeRecipe: Array<number>) {\r\n    const transposedRecipe = Array.from(modeRecipe, (i) => (i + this.transpose) % 12);\r\n    const startingCoords = positions[this.transpose];\r\n    this.modes.push(new Mode(modeName, transposedRecipe, startingCoords));\r\n  }\r\n\r\n  // setObject(modeObj: {[key: string]: Array<number>}, transpose: number) { \r\n  //   this.modeObj = modeObj;\r\n  //   this.transpose = transpose;\r\n  // }\r\n}\r\n\r\nclass Mode {\r\n  name: string;\r\n  length: number;\r\n  chords: Array<Object>;\r\n\r\n  constructor(modeName: string, modeRecipe: Array<number>, startingCoords: Array<[number, number]>) {\r\n    this.name = modeName;\r\n    this.length = modeRecipe.length;\r\n    this.chords = [];\r\n\r\n    startingCoords.forEach(([startX, _], i) => {\r\n      const xArray = Array.from({ length: this.length }, (_, i) => (startX + i) % (this.length));\r\n      let accidentalCount = 0;\r\n\r\n      // xArray.forEach((x, j) => {\r\n      //   // const indexY: any = Object.keys(noteMatrix[x]).find((key: any) => noteMatrix[x][key].number === modeRecipe[j]);\r\n      //   const match: any = Object.entries(noteMatrix[x]).find(([_, { number }]) => number === modeRecipe[j]);\r\n      //   if (match) {\r\n      //     const [y, {number, char}] = match;\r\n      //     accidentalCount += Math.abs(y);\r\n      //   } else {\r\n      //     accidentalCount = 999;\r\n      //     return;\r\n      //   };\r\n      // })\r\n\r\n      for (let x of xArray) {\r\n        const match: any = Object.entries(noteMatrix[x]).find(([_, { number }]) => number === modeRecipe[j]);\r\n      }\r\n\r\n      console.log(`ACC. COUNT: ${accidentalCount}`);\r\n    });\r\n\r\n    console.log('NEXT ');\r\n\r\n    // modeRecipe.forEach((noteNumber: number) => this.addChord());\r\n  }\r\n\r\n  addChord() { this.chords.push(new Chord()) }\r\n}\r\n\r\nclass Chord {\r\n  id: string;\r\n  root: string;\r\n  numeral: string;\r\n  type: {\r\n    full: string,\r\n    short: string,\r\n    symbol: string,\r\n  };\r\n\r\n  constructor() {\r\n    this.id = \"id\";\r\n    this.root = \"C\";\r\n    this.numeral = \"I\";\r\n    this.type = {\r\n      full: \"Major\", \r\n      short: \"maj\", \r\n      symbol: \"\"\r\n    };\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}