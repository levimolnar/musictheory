{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Levi\\\\Desktop\\\\portfolio\\\\src\\\\ModeContext\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { DndContext, rectIntersection } from '@dnd-kit/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModeContext = ({\n  children\n}) => {\n  _s();\n  const [dragId, setDragId] = useState(undefined);\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    onDragStart: ({\n      active\n    }) => {\n      setDragId(active.id);\n    },\n    onDragCancel: () => {\n      setDragId(undefined);\n    },\n    onDragOver: handleDragOver,\n    onDragEnd: handleDragEnd,\n    collisionDetection: rectIntersection,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(ModeContext, \"VklefMBRAMgoIxvdBTZLS8MTzrg=\");\n_c = ModeContext;\nvar _c;\n$RefreshReg$(_c, \"ModeContext\");","map":{"version":3,"names":["useState","DndContext","rectIntersection","jsxDEV","_jsxDEV","ModeContext","children","_s","dragId","setDragId","undefined","onDragStart","active","id","onDragCancel","onDragOver","handleDragOver","onDragEnd","handleDragEnd","collisionDetection","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Levi/Desktop/portfolio/src/ModeContext/index.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nimport { DndContext, DragOverlay, rectIntersection, useDraggable, useDroppable } from '@dnd-kit/core';\nimport { CSS } from '@dnd-kit/utilities';\nimport { arrayMove, SortableContext, horizontalListSortingStrategy, useSortable } from '@dnd-kit/sortable';\n\nexport const ModeContext = ({children}: {children: any}) => {\n\n  const [dragId, setDragId] = useState<string | undefined>(undefined);\n\n  return (\n    <DndContext\n      onDragStart={({active}: any) => {setDragId(active.id)}}\n      onDragCancel={() => {setDragId(undefined)}}\n      onDragOver={handleDragOver}\n      onDragEnd={handleDragEnd}\n      collisionDetection={rectIntersection}\n    >\n      {children}\n    </DndContext>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAmB,OAAO;AAE3C,SAASC,UAAU,EAAeC,gBAAgB,QAAoC,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAItG,OAAO,MAAMC,WAAW,GAAGA,CAAC;EAACC;AAAyB,CAAC,KAAK;EAAAC,EAAA;EAE1D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAqBU,SAAS,CAAC;EAEnE,oBACEN,OAAA,CAACH,UAAU;IACTU,WAAW,EAAEA,CAAC;MAACC;IAAW,CAAC,KAAK;MAACH,SAAS,CAACG,MAAM,CAACC,EAAE,CAAC;IAAA,CAAE;IACvDC,YAAY,EAAEA,CAAA,KAAM;MAACL,SAAS,CAACC,SAAS,CAAC;IAAA,CAAE;IAC3CK,UAAU,EAAEC,cAAe;IAC3BC,SAAS,EAAEC,aAAc;IACzBC,kBAAkB,EAAEjB,gBAAiB;IAAAI,QAAA,EAEpCA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEjB,CAAC;AAAAhB,EAAA,CAfYF,WAAW;AAAAmB,EAAA,GAAXnB,WAAW;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}