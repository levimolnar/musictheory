{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Levi\\\\Desktop\\\\portfolio\\\\src\\\\ModeContext\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { useState, createContext } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { DndContext, DragOverlay } from '@dnd-kit/core';\nimport { arrayMove } from '@dnd-kit/sortable';\nimport { NoteCard } from '../NoteCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ProgContext = /*#__PURE__*/createContext(undefined);\nexport const ModeContext = ({\n  children\n}) => {\n  _s();\n  const [dragId, setDragId] = useState(undefined);\n  const [payloadStorage, setPayloadStorage] = useState(undefined);\n  const [blocked, setBlocked] = useState(false);\n  const [throttled, setThrottled] = useState(false);\n  const throttle = () => {\n    setThrottled(true);\n    setTimeout(() => {\n      setThrottled(false);\n    }, 100);\n  };\n  const handleDragStart = ({\n    active\n  }) => {\n    setBlocked(false);\n    setThrottled(false);\n    setDragId(active.id);\n    if (active.data.current.payload) {\n      setPayloadStorage(active.data.current.payload);\n    }\n    ;\n  };\n  const handleDragOver = ({\n    active,\n    over\n  }) => {\n    if (!payloadStorage) return;\n    if (!over || !over.data.current) {\n      // if object hovered over is not drop zone\n\n      if (active.data.current.sortable) {\n        // if from sortable, remove card at index from sortable\n        console.log('remove from sortable');\n\n        // remove based on ID, can't remove wrong index.\n        active.data.current.payload.setFunc(items => new Set([...items].filter(chord => chord.id !== active.data.current.payload.chord.id)));\n        throttle();\n        setBlocked(false);\n        return;\n      }\n      ;\n      return;\n    }\n    ;\n    if (active.data.current.hasOwnProperty(\"sortable\") && active.data.current.sortable.containerId !== over.data.current.sortable.containerId) {\n      // in case sortables are next to eachother and draggable does not meet !over, still remove item.\n\n      active.data.current.payload.setFunc(items => new Set([...items].filter(chord => chord.id !== active.data.current.payload.chord.id)));\n      setThrottled(true);\n      setTimeout(() => {\n        setThrottled(false);\n      }, 100);\n      setBlocked(false);\n      return;\n    }\n    ;\n    if (payloadStorage.chord) {\n      console.log('add to sortable / swap');\n      if (throttled) return;\n      const {\n        index: newIndex,\n        items\n      } = over.data.current.sortable;\n      const setItemsFunc = over.data.current.payload.setFunc;\n\n      // const duplicateIndex = items.findIndex((i: any) => i.id === dragId);\n      const duplicateIndex = items.findIndex(id => id === dragId);\n      console.log(duplicateIndex);\n      if (duplicateIndex === -1 && !blocked) {\n        // dragId not already in sortable        \n        // setItemsFunc((items: any) => items.toSpliced(newIndex, 0, {...payloadStorage.chord, id: dragId}));\n\n        // @ts-ignore\n        setItemsFunc(items => new Set([...items].toSpliced(newIndex, 0, {\n          ...payloadStorage.chord,\n          id: dragId\n        })));\n        setBlocked(true);\n      } else {\n        // setItemsFunc((items: any) => arrayMove(items, duplicateIndex, newIndex));\n        setItemsFunc(items => new Set(arrayMove([...items], duplicateIndex, newIndex)));\n      }\n      ;\n      setThrottled(true);\n      setTimeout(() => {\n        setThrottled(false);\n      }, 100);\n      return;\n    }\n    ;\n  };\n  const handleDragEnd = ({\n    active,\n    over\n  }) => {\n    if (payloadStorage.origin === 'chart') {\n      // reset id of dragged chart item on in any case\n      payloadStorage.setFunc(prevScales => {\n        const newScales = {\n          ...prevScales\n        };\n        newScales[payloadStorage.chordDir.scale][payloadStorage.chordDir.index].id = uuidv4();\n        return newScales;\n      });\n    }\n    if (!over) return;\n\n    // if (payloadStorage.origin === 'progBar' && over.data.current.sortable) {\n    if (payloadStorage.origin === 'progBar' && active.data.current.sortable && over.data.current.sortable) {\n      console.log('sortable -> sortable');\n      const oldIndex = active.data.current.sortable.index; // !\n      const newIndex = over.data.current.sortable.index;\n\n      // over.data.current.payload.setFunc((items: any) => arrayMove(items, oldIndex, newIndex));\n      over.data.current.payload.setFunc(items => new Set(arrayMove([...items], oldIndex, newIndex)));\n      return;\n    }\n    if (payloadStorage.origin === 'chart' && over.data.current.sortable) {\n      console.log('chart -> sortable');\n\n      // payloadStorage.setFunc((prevScales: any) => {\n      //   const newScales = {...prevScales};\n      //   newScales[payloadStorage.chordDir.scale][payloadStorage.chordDir.index].id = uuidv4();\n      //   return newScales;\n      // });\n\n      return;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    onDragStart: handleDragStart,\n    onDragCancel: () => {\n      setDragId(undefined);\n      setPayloadStorage(undefined);\n    },\n    onDragOver: handleDragOver,\n    onDragEnd: handleDragEnd,\n    children: [children, payloadStorage ? /*#__PURE__*/_jsxDEV(DragOverlay, {\n      children: /*#__PURE__*/_jsxDEV(NoteCard, {\n        chord: payloadStorage.chord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(ModeContext, \"K7+OEM0/i5NekS0IGmcmlNBkcoE=\");\n_c = ModeContext;\nvar _c;\n$RefreshReg$(_c, \"ModeContext\");","map":{"version":3,"names":["useState","createContext","v4","uuidv4","DndContext","DragOverlay","arrayMove","NoteCard","jsxDEV","_jsxDEV","Fragment","_Fragment","ProgContext","undefined","ModeContext","children","_s","dragId","setDragId","payloadStorage","setPayloadStorage","blocked","setBlocked","throttled","setThrottled","throttle","setTimeout","handleDragStart","active","id","data","current","payload","handleDragOver","over","sortable","console","log","setFunc","items","Set","filter","chord","hasOwnProperty","containerId","index","newIndex","setItemsFunc","duplicateIndex","findIndex","toSpliced","handleDragEnd","origin","prevScales","newScales","chordDir","scale","oldIndex","onDragStart","onDragCancel","onDragOver","onDragEnd","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Levi/Desktop/portfolio/src/ModeContext/index.tsx"],"sourcesContent":["import { useState, useEffect, createContext } from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { DndContext, DragOverlay, useDraggable, useDroppable } from '@dnd-kit/core';\nimport { CSS } from '@dnd-kit/utilities';\nimport { arrayMove, SortableContext, horizontalListSortingStrategy, useSortable } from '@dnd-kit/sortable';\nimport { NoteCard } from '../NoteCard';\n\nexport const ProgContext = createContext<any>(undefined);\n\nexport const ModeContext = ({children}: {children: any}) => {\n\n  const [dragId, setDragId] = useState<string | undefined>(undefined);\n  const [payloadStorage, setPayloadStorage] = useState<any | undefined>(undefined);\n  const [blocked, setBlocked] = useState<boolean>(false);\n  const [throttled, setThrottled] = useState<boolean>(false);\n\n  const throttle = () => {\n    setThrottled(true);\n    setTimeout(() => {\n      setThrottled(false);\n    }, 100);\n  };\n\n  const handleDragStart = ({active}: any) => {\n    setBlocked(false);\n    setThrottled(false);\n    setDragId(active.id); \n    if (active.data.current.payload) { setPayloadStorage(active.data.current.payload) };\n  }\n\n  const handleDragOver = ({active, over}: any) => {\n\n    if (!payloadStorage) return;\n\n    if (!over || !over.data.current) {\n      // if object hovered over is not drop zone\n\n      if (active.data.current.sortable) {\n        // if from sortable, remove card at index from sortable\n        console.log('remove from sortable');\n\n        // remove based on ID, can't remove wrong index.\n        active.data.current.payload.setFunc((items: any) => new Set([...items].filter((chord: any) => chord.id !== active.data.current.payload.chord.id)));\n\n        throttle()\n        setBlocked(false);\n\n        return\n      };\n\n      return\n    };\n\n    if (active.data.current.hasOwnProperty(\"sortable\") && active.data.current.sortable.containerId !== over.data.current.sortable.containerId) {\n      // in case sortables are next to eachother and draggable does not meet !over, still remove item.\n\n      active.data.current.payload.setFunc((items: any) => new Set([...items].filter((chord: any) => chord.id !== active.data.current.payload.chord.id)));\n\n      setThrottled(true);\n      setTimeout(() => {\n        setThrottled(false);\n      }, 100);\n\n      setBlocked(false);\n\n      return\n    };\n\n    if (payloadStorage.chord) {\n      console.log('add to sortable / swap');\n\n      if (throttled) return\n\n      const {index: newIndex, items } = over.data.current.sortable;\n      const setItemsFunc = over.data.current.payload.setFunc;\n\n      // const duplicateIndex = items.findIndex((i: any) => i.id === dragId);\n      const duplicateIndex = items.findIndex((id: any) => id === dragId);\n      console.log(duplicateIndex);\n      \n      if (duplicateIndex === -1 && !blocked) {\n\n        // dragId not already in sortable        \n        // setItemsFunc((items: any) => items.toSpliced(newIndex, 0, {...payloadStorage.chord, id: dragId}));\n\n        // @ts-ignore\n        setItemsFunc((items: any) => new Set([...items].toSpliced(newIndex, 0, {...payloadStorage.chord, id: dragId})));\n        setBlocked(true);\n\n      } else {\n        \n        // setItemsFunc((items: any) => arrayMove(items, duplicateIndex, newIndex));\n        setItemsFunc((items: any) => new Set(arrayMove([...items], duplicateIndex, newIndex)));\n\n      };\n\n      setThrottled(true);\n      setTimeout(() => {\n        setThrottled(false);\n      }, 100);\n\n      return\n    };\n  }\n\n  const handleDragEnd = ({active, over}: any) => {\n\n    if (payloadStorage.origin === 'chart') {\n      // reset id of dragged chart item on in any case\n      payloadStorage.setFunc((prevScales: any) => {\n        const newScales = {...prevScales};\n        newScales[payloadStorage.chordDir.scale][payloadStorage.chordDir.index].id = uuidv4();\n        return newScales;\n      });\n    }\n\n    if (!over) return;\n\n    // if (payloadStorage.origin === 'progBar' && over.data.current.sortable) {\n    if (payloadStorage.origin === 'progBar' && active.data.current.sortable && over.data.current.sortable) {\n\n      console.log('sortable -> sortable')\n\n      const oldIndex = active.data.current.sortable.index;  // !\n      const newIndex = over.data.current.sortable.index;\n\n      // over.data.current.payload.setFunc((items: any) => arrayMove(items, oldIndex, newIndex));\n      over.data.current.payload.setFunc((items: any) => new Set(arrayMove([...items], oldIndex, newIndex)));\n      return\n    }\n\n    if (payloadStorage.origin === 'chart' && over.data.current.sortable) {\n      console.log('chart -> sortable')\n\n      // payloadStorage.setFunc((prevScales: any) => {\n      //   const newScales = {...prevScales};\n      //   newScales[payloadStorage.chordDir.scale][payloadStorage.chordDir.index].id = uuidv4();\n      //   return newScales;\n      // });\n\n      return\n    }\n  };\n\n\n  return (\n    <DndContext\n      onDragStart={handleDragStart}\n      onDragCancel={() => {\n        setDragId(undefined); \n        setPayloadStorage(undefined);\n      }}\n      onDragOver={handleDragOver}\n      onDragEnd={handleDragEnd}\n    >\n      {children}\n      {payloadStorage ? <DragOverlay><NoteCard chord={payloadStorage.chord}/></DragOverlay> : <></>}\n    </DndContext>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAaC,aAAa,QAAQ,OAAO;AAE1D,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAEnC,SAASC,UAAU,EAAEC,WAAW,QAAoC,eAAe;AAEnF,SAASC,SAAS,QAAqE,mBAAmB;AAC1G,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,OAAO,MAAMC,WAAW,gBAAGX,aAAa,CAAMY,SAAS,CAAC;AAExD,OAAO,MAAMC,WAAW,GAAGA,CAAC;EAACC;AAAyB,CAAC,KAAK;EAAAC,EAAA;EAE1D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAqBa,SAAS,CAAC;EACnE,MAAM,CAACM,cAAc,EAAEC,iBAAiB,CAAC,GAAGpB,QAAQ,CAAkBa,SAAS,CAAC;EAChF,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAU,KAAK,CAAC;EACtD,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAU,KAAK,CAAC;EAE1D,MAAMyB,QAAQ,GAAGA,CAAA,KAAM;IACrBD,YAAY,CAAC,IAAI,CAAC;IAClBE,UAAU,CAAC,MAAM;MACfF,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;EAED,MAAMG,eAAe,GAAGA,CAAC;IAACC;EAAW,CAAC,KAAK;IACzCN,UAAU,CAAC,KAAK,CAAC;IACjBE,YAAY,CAAC,KAAK,CAAC;IACnBN,SAAS,CAACU,MAAM,CAACC,EAAE,CAAC;IACpB,IAAID,MAAM,CAACE,IAAI,CAACC,OAAO,CAACC,OAAO,EAAE;MAAEZ,iBAAiB,CAACQ,MAAM,CAACE,IAAI,CAACC,OAAO,CAACC,OAAO,CAAC;IAAC;IAAC;EACrF,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAC;IAACL,MAAM;IAAEM;EAAS,CAAC,KAAK;IAE9C,IAAI,CAACf,cAAc,EAAE;IAErB,IAAI,CAACe,IAAI,IAAI,CAACA,IAAI,CAACJ,IAAI,CAACC,OAAO,EAAE;MAC/B;;MAEA,IAAIH,MAAM,CAACE,IAAI,CAACC,OAAO,CAACI,QAAQ,EAAE;QAChC;QACAC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;;QAEnC;QACAT,MAAM,CAACE,IAAI,CAACC,OAAO,CAACC,OAAO,CAACM,OAAO,CAAEC,KAAU,IAAK,IAAIC,GAAG,CAAC,CAAC,GAAGD,KAAK,CAAC,CAACE,MAAM,CAAEC,KAAU,IAAKA,KAAK,CAACb,EAAE,KAAKD,MAAM,CAACE,IAAI,CAACC,OAAO,CAACC,OAAO,CAACU,KAAK,CAACb,EAAE,CAAC,CAAC,CAAC;QAElJJ,QAAQ,CAAC,CAAC;QACVH,UAAU,CAAC,KAAK,CAAC;QAEjB;MACF;MAAC;MAED;IACF;IAAC;IAED,IAAIM,MAAM,CAACE,IAAI,CAACC,OAAO,CAACY,cAAc,CAAC,UAAU,CAAC,IAAIf,MAAM,CAACE,IAAI,CAACC,OAAO,CAACI,QAAQ,CAACS,WAAW,KAAKV,IAAI,CAACJ,IAAI,CAACC,OAAO,CAACI,QAAQ,CAACS,WAAW,EAAE;MACzI;;MAEAhB,MAAM,CAACE,IAAI,CAACC,OAAO,CAACC,OAAO,CAACM,OAAO,CAAEC,KAAU,IAAK,IAAIC,GAAG,CAAC,CAAC,GAAGD,KAAK,CAAC,CAACE,MAAM,CAAEC,KAAU,IAAKA,KAAK,CAACb,EAAE,KAAKD,MAAM,CAACE,IAAI,CAACC,OAAO,CAACC,OAAO,CAACU,KAAK,CAACb,EAAE,CAAC,CAAC,CAAC;MAElJL,YAAY,CAAC,IAAI,CAAC;MAClBE,UAAU,CAAC,MAAM;QACfF,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,EAAE,GAAG,CAAC;MAEPF,UAAU,CAAC,KAAK,CAAC;MAEjB;IACF;IAAC;IAED,IAAIH,cAAc,CAACuB,KAAK,EAAE;MACxBN,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MAErC,IAAId,SAAS,EAAE;MAEf,MAAM;QAACsB,KAAK,EAAEC,QAAQ;QAAEP;MAAM,CAAC,GAAGL,IAAI,CAACJ,IAAI,CAACC,OAAO,CAACI,QAAQ;MAC5D,MAAMY,YAAY,GAAGb,IAAI,CAACJ,IAAI,CAACC,OAAO,CAACC,OAAO,CAACM,OAAO;;MAEtD;MACA,MAAMU,cAAc,GAAGT,KAAK,CAACU,SAAS,CAAEpB,EAAO,IAAKA,EAAE,KAAKZ,MAAM,CAAC;MAClEmB,OAAO,CAACC,GAAG,CAACW,cAAc,CAAC;MAE3B,IAAIA,cAAc,KAAK,CAAC,CAAC,IAAI,CAAC3B,OAAO,EAAE;QAErC;QACA;;QAEA;QACA0B,YAAY,CAAER,KAAU,IAAK,IAAIC,GAAG,CAAC,CAAC,GAAGD,KAAK,CAAC,CAACW,SAAS,CAACJ,QAAQ,EAAE,CAAC,EAAE;UAAC,GAAG3B,cAAc,CAACuB,KAAK;UAAEb,EAAE,EAAEZ;QAAM,CAAC,CAAC,CAAC,CAAC;QAC/GK,UAAU,CAAC,IAAI,CAAC;MAElB,CAAC,MAAM;QAEL;QACAyB,YAAY,CAAER,KAAU,IAAK,IAAIC,GAAG,CAAClC,SAAS,CAAC,CAAC,GAAGiC,KAAK,CAAC,EAAES,cAAc,EAAEF,QAAQ,CAAC,CAAC,CAAC;MAExF;MAAC;MAEDtB,YAAY,CAAC,IAAI,CAAC;MAClBE,UAAU,CAAC,MAAM;QACfF,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,EAAE,GAAG,CAAC;MAEP;IACF;IAAC;EACH,CAAC;EAED,MAAM2B,aAAa,GAAGA,CAAC;IAACvB,MAAM;IAAEM;EAAS,CAAC,KAAK;IAE7C,IAAIf,cAAc,CAACiC,MAAM,KAAK,OAAO,EAAE;MACrC;MACAjC,cAAc,CAACmB,OAAO,CAAEe,UAAe,IAAK;QAC1C,MAAMC,SAAS,GAAG;UAAC,GAAGD;QAAU,CAAC;QACjCC,SAAS,CAACnC,cAAc,CAACoC,QAAQ,CAACC,KAAK,CAAC,CAACrC,cAAc,CAACoC,QAAQ,CAACV,KAAK,CAAC,CAAChB,EAAE,GAAG1B,MAAM,CAAC,CAAC;QACrF,OAAOmD,SAAS;MAClB,CAAC,CAAC;IACJ;IAEA,IAAI,CAACpB,IAAI,EAAE;;IAEX;IACA,IAAIf,cAAc,CAACiC,MAAM,KAAK,SAAS,IAAIxB,MAAM,CAACE,IAAI,CAACC,OAAO,CAACI,QAAQ,IAAID,IAAI,CAACJ,IAAI,CAACC,OAAO,CAACI,QAAQ,EAAE;MAErGC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MAEnC,MAAMoB,QAAQ,GAAG7B,MAAM,CAACE,IAAI,CAACC,OAAO,CAACI,QAAQ,CAACU,KAAK,CAAC,CAAE;MACtD,MAAMC,QAAQ,GAAGZ,IAAI,CAACJ,IAAI,CAACC,OAAO,CAACI,QAAQ,CAACU,KAAK;;MAEjD;MACAX,IAAI,CAACJ,IAAI,CAACC,OAAO,CAACC,OAAO,CAACM,OAAO,CAAEC,KAAU,IAAK,IAAIC,GAAG,CAAClC,SAAS,CAAC,CAAC,GAAGiC,KAAK,CAAC,EAAEkB,QAAQ,EAAEX,QAAQ,CAAC,CAAC,CAAC;MACrG;IACF;IAEA,IAAI3B,cAAc,CAACiC,MAAM,KAAK,OAAO,IAAIlB,IAAI,CAACJ,IAAI,CAACC,OAAO,CAACI,QAAQ,EAAE;MACnEC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;;MAEhC;MACA;MACA;MACA;MACA;;MAEA;IACF;EACF,CAAC;EAGD,oBACE5B,OAAA,CAACL,UAAU;IACTsD,WAAW,EAAE/B,eAAgB;IAC7BgC,YAAY,EAAEA,CAAA,KAAM;MAClBzC,SAAS,CAACL,SAAS,CAAC;MACpBO,iBAAiB,CAACP,SAAS,CAAC;IAC9B,CAAE;IACF+C,UAAU,EAAE3B,cAAe;IAC3B4B,SAAS,EAAEV,aAAc;IAAApC,QAAA,GAExBA,QAAQ,EACRI,cAAc,gBAAGV,OAAA,CAACJ,WAAW;MAAAU,QAAA,eAACN,OAAA,CAACF,QAAQ;QAACmC,KAAK,EAAEvB,cAAc,CAACuB;MAAM;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,gBAAGxD,OAAA,CAAAE,SAAA,mBAAI,CAAC;EAAA;IAAAmD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnF,CAAC;AAEjB,CAAC;AAAAjD,EAAA,CAtJYF,WAAW;AAAAoD,EAAA,GAAXpD,WAAW;AAAA,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}